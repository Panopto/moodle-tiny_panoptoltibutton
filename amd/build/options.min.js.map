{"version":3,"file":"options.min.js","sources":["../src/options.js"],"sourcesContent":["// This file is part of Moodle - https://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <https://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Tiny Panopto LTI Video Options helper.\r\n *\r\n * @module     tiny_panoptoltibutton/options\r\n * @copyright  2024 Panopto\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nimport {getPluginOptionName} from 'editor_tiny/options';\r\nimport {pluginName} from './common';\r\n\r\n// Helper variables for the option names.\r\nconst courseid = getPluginOptionName(pluginName, \"courseid\");\r\nconst tool = getPluginOptionName(pluginName, \"tool\");\r\nconst wwwroot = getPluginOptionName(pluginName, \"wwwroot\");\r\nconst contentitempath = getPluginOptionName(pluginName, \"contentitempath\");\r\nconst resourcebase = getPluginOptionName(pluginName, \"resourcebase\");\r\nconst panoptoltibuttondescription = getPluginOptionName(\r\n    pluginName,\r\n    \"panoptoltibuttondescription\"\r\n);\r\nconst panoptoltibuttonlongdescription = getPluginOptionName(\r\n    pluginName,\r\n    \"panoptoltibuttonlongdescription\"\r\n);\r\nconst unprovisionederror = getPluginOptionName(\r\n    pluginName,\r\n    \"unprovisionederror\"\r\n);\r\n\r\n/**\r\n * Options registration function.\r\n *\r\n * @param {tinyMCE} editor\r\n */\r\nexport const register = (editor) => {\r\n    const registerOption = editor.options.register;\r\n\r\n    // For each option, register it with the editor.\r\n    registerOption(courseid, {\r\n        processor: \"string\",\r\n    });\r\n    registerOption(tool, {\r\n        processor: \"object\",\r\n    });\r\n    registerOption(wwwroot, {\r\n        processor: \"string\",\r\n    });\r\n    registerOption(contentitempath, {\r\n        processor: \"string\",\r\n    });\r\n    registerOption(resourcebase, {\r\n        processor: \"string\",\r\n    });\r\n    registerOption(panoptoltibuttondescription, {\r\n        processor: \"string\",\r\n    });\r\n    registerOption(panoptoltibuttonlongdescription, {\r\n        processor: \"string\",\r\n    });\r\n    registerOption(unprovisionederror, {\r\n        processor: \"string\",\r\n    });\r\n};\r\n\r\n/**\r\n * Fetch the courseid value for this editor instance.\r\n *\r\n * @param {tinyMCE} editor The editor instance to fetch the value for\r\n * @returns {object} The value of the courseid option\r\n */\r\nexport const getCourseId = (editor) => editor.options.get(courseid);\r\n\r\n/**\r\n * Fetch the tool value for this editor instance.\r\n *\r\n * @param {tinyMCE} editor The editor instance to fetch the value for\r\n * @returns {object} The value of the tool option\r\n */\r\nexport const getTool = (editor) => editor.options.get(tool);\r\n\r\n/**\r\n * Fetch the wwwroot value for this editor instance.\r\n *\r\n * @param {tinyMCE} editor The editor instance to fetch the value for\r\n * @returns {object} The value of the wwwroot option\r\n */\r\nexport const getWwwroot = (editor) => editor.options.get(wwwroot);\r\n\r\n/**\r\n * Fetch the contentitempath value for this editor instance.\r\n *\r\n * @param {tinyMCE} editor The editor instance to fetch the value for\r\n * @returns {object} The value of the contentitempath option\r\n */\r\nexport const getContentItemPath = (editor) => editor.options.get(contentitempath);\r\n\r\n/**\r\n * Fetch the resourcebase value for this editor instance.\r\n *\r\n * @param {tinyMCE} editor The editor instance to fetch the value for\r\n * @returns {object} The value of the resourcebase option\r\n */\r\nexport const getResourceBase = (editor) => editor.options.get(resourcebase);\r\n\r\n/**\r\n * Fetch the panoptoltibuttondescription value for this editor instance.\r\n *\r\n * @param {tinyMCE} editor The editor instance to fetch the value for\r\n * @returns {object} The value of the panoptoltibuttondescription option\r\n */\r\nexport const getPanoptoLtiButtonDescription = (editor) =>\r\n    editor.options.get(panoptoltibuttondescription);\r\n\r\n/**\r\n * Fetch the panoptoltibuttonlongdescription value for this editor instance.\r\n *\r\n * @param {tinyMCE} editor The editor instance to fetch the value for\r\n * @returns {object} The value of the panoptoltibuttonlongdescription option\r\n */\r\nexport const getPanoptoLtiButtonLongDescription = (editor) =>\r\n    editor.options.get(panoptoltibuttonlongdescription);\r\n\r\n/**\r\n * Fetch the unprovisionederror value for this editor instance.\r\n *\r\n * @param {tinyMCE} editor The editor instance to fetch the value for\r\n * @returns {object} The value of the unprovisionederror option\r\n */\r\nexport const getUnprovisionedError = (editor) =>\r\n    editor.options.get(unprovisionederror);\r\n"],"names":["courseid","pluginName","tool","wwwroot","contentitempath","resourcebase","panoptoltibuttondescription","panoptoltibuttonlongdescription","unprovisionederror","editor","registerOption","options","register","processor","get"],"mappings":";;;;;;;;MA2BMA,UAAW,gCAAoBC,mBAAY,YAC3CC,MAAO,gCAAoBD,mBAAY,QACvCE,SAAU,gCAAoBF,mBAAY,WAC1CG,iBAAkB,gCAAoBH,mBAAY,mBAClDI,cAAe,gCAAoBJ,mBAAY,gBAC/CK,6BAA8B,gCAChCL,mBACA,+BAEEM,iCAAkC,gCACpCN,mBACA,mCAEEO,oBAAqB,gCACvBP,mBACA,wCAQqBQ,eACfC,eAAiBD,OAAOE,QAAQC,SAGtCF,eAAeV,SAAU,CACrBa,UAAW,WAEfH,eAAeR,KAAM,CACjBW,UAAW,WAEfH,eAAeP,QAAS,CACpBU,UAAW,WAEfH,eAAeN,gBAAiB,CAC5BS,UAAW,WAEfH,eAAeL,aAAc,CACzBQ,UAAW,WAEfH,eAAeJ,4BAA6B,CACxCO,UAAW,WAEfH,eAAeH,gCAAiC,CAC5CM,UAAW,WAEfH,eAAeF,mBAAoB,CAC/BK,UAAW,iCAUSJ,QAAWA,OAAOE,QAAQG,IAAId,2BAQlCS,QAAWA,OAAOE,QAAQG,IAAIZ,0BAQ3BO,QAAWA,OAAOE,QAAQG,IAAIX,qCAQtBM,QAAWA,OAAOE,QAAQG,IAAIV,0CAQjCK,QAAWA,OAAOE,QAAQG,IAAIT,sDAQfI,QAC3CA,OAAOE,QAAQG,IAAIR,yEAQ4BG,QAC/CA,OAAOE,QAAQG,IAAIP,gEAQeE,QAClCA,OAAOE,QAAQG,IAAIN"}