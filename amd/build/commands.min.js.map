{"version":3,"file":"commands.min.js","sources":["../src/commands.js"],"sourcesContent":["// This file is part of Moodle - https://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <https://www.gnu.org/licenses/>.\n\n/**\n * Tiny Panopto LTI Video commands.\n *\n * @module     tiny_panoptoltibutton/commands\n * @copyright  2023 Panopto\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {getButtonImage} from 'editor_tiny/utils';\nimport {handleAction} from './ui';\nimport {get_string as getString} from 'core/str';\nimport {component, buttonName, icon} from './common';\nimport {getTool} from \"./options\";\n\nexport const getSetup = async() => {\n    const [buttonText, buttonImage] = await Promise.all([\n        getString(\"panopto_button_description\", component),\n        getButtonImage(\"icon\", component),\n    ]);\n\n    return (editor) => {\n        // eslint-disable-next-line no-console\n        console.log(getTool(editor));\n\n        if (getTool(editor)) {\n            // Register the Moodle SVG as an icon suitable for use as a TinyMCE toolbar button.\n            editor.ui.registry.addIcon(icon, buttonImage.html);\n\n            // Register the Panopto LTI Video Toolbar Button.\n            editor.ui.registry.addToggleButton(buttonName, {\n                icon,\n                tooltip: buttonText,\n                onAction: () => handleAction(editor),\n            });\n\n            // Add the Panopto LTI Video Menu Item.\n            // This allows it to be added to a standard menu, or a context menu.\n            editor.ui.registry.addMenuItem(buttonName, {\n                icon,\n                text: buttonText,\n                onAction: () => handleAction(editor),\n            });\n        }\n    };\n};\n"],"names":["async","buttonText","buttonImage","Promise","all","component","editor","console","log","ui","registry","addIcon","icon","html","addToggleButton","buttonName","tooltip","onAction","addMenuItem","text"],"mappings":"yQA6BwBA,gBACbC,WAAYC,mBAAqBC,QAAQC,IAAI,EAChD,mBAAU,6BAA8BC,oBACxC,yBAAe,OAAQA,4BAGnBC,SAEJC,QAAQC,KAAI,oBAAQF,UAEhB,oBAAQA,UAERA,OAAOG,GAAGC,SAASC,QAAQC,aAAMV,YAAYW,MAG7CP,OAAOG,GAAGC,SAASI,gBAAgBC,mBAAY,CAC3CH,KAAAA,aACAI,QAASf,WACTgB,SAAU,KAAM,oBAAaX,UAKjCA,OAAOG,GAAGC,SAASQ,YAAYH,mBAAY,CACvCH,KAAAA,aACAO,KAAMlB,WACNgB,SAAU,KAAM,oBAAaX"}